(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{589:function(v,_,e){"use strict";e.r(_);var l=e(32),t=Object(l.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("blockquote",[e("p",[v._v("Kubernetes是容器集群管理系统，是一个开源的平台，可以实现容器集群的自动化部署、自动扩缩容、维护等功能。")])]),v._v(" "),e("p",[v._v("Kubernetes的名字来自希腊语，意思是“舵手” 或 “领航员”。K8s是将8个字母“ubernete”替换为“8”的缩写。")]),v._v(" "),e("h2",{attrs:{id:"通过kubernetes你可以："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过kubernetes你可以："}},[v._v("#")]),v._v(" 通过Kubernetes你可以：")]),v._v(" "),e("ul",[e("li",[v._v("快速部署应用")]),v._v(" "),e("li",[v._v("快速扩展应用")]),v._v(" "),e("li",[v._v("无缝对接新的应用功能")]),v._v(" "),e("li",[v._v("节省资源，优化硬件资源的使用")]),v._v(" "),e("li",[v._v("我们的目标是促进完善组件和工具的生态系统，以减轻应用程序- 在公有云或私有云中运行的负担。")])]),v._v(" "),e("h2",{attrs:{id:"kubernetes-特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-特点"}},[v._v("#")]),v._v(" Kubernetes 特点")]),v._v(" "),e("ul",[e("li",[v._v("可移植: 支持公有云，私有云，混合云，多重云（multi-cloud）")]),v._v(" "),e("li",[v._v("可扩展: 模块化, 插件化, 可挂载, 可组合")]),v._v(" "),e("li",[v._v("自动化: 自动部署，自动重启，自动复制，自动伸缩/扩展")])]),v._v(" "),e("blockquote",[e("p",[v._v("Kubernetes是Google 2014年创建管理的，是Google 10多年大规模容器管理技术Borg的开源版本。")])]),v._v(" "),e("ol",[e("li",[e("p",[v._v("传统的应用部署方式是通过插件或脚本来安装应用。这样做的缺点是应用的运行、配置、管理、所有生存周期将与当前操作系统绑定，这样做并不利于应用的升级更新/回滚等操作，当然也可以通过创建虚机的方式来实现某些功能，但是虚拟机非常重，并不利于可移植性。")])]),v._v(" "),e("li",[e("p",[v._v("新的方式是通过部署容器方式实现，每个容器之间互相隔离，每个容器有自己的文件系统 ，容器之间进程不会相互影响，能区分计算资源。相对于虚拟机，容器能快速部署，由于容器与底层设施、机器文件系统解耦的，所以它能在不同云、不同版本操作系统间进行迁移。")])]),v._v(" "),e("li",[e("p",[v._v("容器占用资源少、部署快，每个应用可以被打包成一个容器镜像，每个应用与容器间成一对一关系也使容器有更大优势，使用容器可以在build或release 的阶段，为应用创建容器镜像，因为每个应用不需要与其余的应用堆栈组合，也不依赖于生产环境基础结构，这使得从研发到测试、生产能提供一致环境。类似地，容器比虚机轻量、更“透明”，这更便于监控和管理。")])])]),v._v(" "),e("p",[e("strong",[v._v("容器优势总结：")])]),v._v(" "),e("ul",[e("li",[v._v("快速创建/部署应用：与VM虚拟机相比，容器镜像的创建更加容易。")]),v._v(" "),e("li",[v._v("持续开发、集成和部署：提供可靠且频繁的容器镜像构建/部署，并使用快速和简单的回滚(由于镜像不可变性)。")]),v._v(" "),e("li",[v._v("开发和运行相分离：在build或者release阶段创建容器镜像，使得应用和基础设施解耦。")]),v._v(" "),e("li",[v._v("开发，测试和生产环境一致性：在本地或外网（生产环境）运行的一致性。")]),v._v(" "),e("li",[v._v("云平台或其他操作系统：可以在 Ubuntu、RHEL、 CoreOS、on-prem、Google Container Engine或其它任何环境中运行。")]),v._v(" "),e("li",[v._v("Loosely coupled，分布式，弹性，微服务化：应用程序分为更小的、独立的部件，可以动态部署和管理。")]),v._v(" "),e("li",[v._v("资源隔离")]),v._v(" "),e("li",[v._v("资源利用：更高效")])]),v._v(" "),e("p",[e("strong",[v._v("使用Kubernetes能做什么？")])]),v._v(" "),e("blockquote",[e("p",[v._v("可以在物理或虚拟机的Kubernetes集群上运行容器化应用，Kubernetes能提供一个以“容器为中心的基础架构”，满足在生产环境中运行应用的一些常见需求，如：")])]),v._v(" "),e("ul",[e("li",[v._v("多个进程（作为容器运行）协同工作。（Pod）")]),v._v(" "),e("li",[v._v("存储系统挂载")]),v._v(" "),e("li",[v._v("Distributing secrets")]),v._v(" "),e("li",[v._v("应用健康检测")]),v._v(" "),e("li",[v._v("应用实例的复制")]),v._v(" "),e("li",[v._v("Pod自动伸缩/扩展")]),v._v(" "),e("li",[v._v("Naming and discovering")]),v._v(" "),e("li",[v._v("负载均衡")]),v._v(" "),e("li",[v._v("滚动更新")]),v._v(" "),e("li",[v._v("资源监控")]),v._v(" "),e("li",[v._v("日志访问")]),v._v(" "),e("li",[v._v("调试应用程序")]),v._v(" "),e("li",[v._v("提供认证和授权")])])])}),[],!1,null,null,null);_.default=t.exports}}]);