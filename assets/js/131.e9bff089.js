(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{611:function(t,s,e){"use strict";e.r(s);var i=e(32),l=Object(i.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"优点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),e("ul",[e("li",[t._v("读写性能优异， Redis能读的速度是110000次/s，写的速度是81000次/s。")]),t._v(" "),e("li",[t._v("支持数据持久化，支持AOF和RDB两种持久化方式。")]),t._v(" "),e("li",[t._v("支持事务，Redis的所有操作都是原子性的，同时Redis还支持对几个操作合并后的原子性执行。")]),t._v(" "),e("li",[t._v("数据结构丰富，除了支持string类型的value外还支持hash、set、zset、list等数据结构。")]),t._v(" "),e("li",[t._v("支持主从复制，主机会自动将数据同步到从机，可以进行读写分离。")])]),t._v(" "),e("h2",{attrs:{id:"缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),e("ul",[e("li",[t._v("数据库容量受到物理内存的限制，不能用作海量数据的高性能读写，因此Redis适合的场景主要局限在较小数据量的高性能操作和运算上。")]),t._v(" "),e("li",[t._v("Redis 不具备自动容错和恢复功能，主机从机的宕机都会导致前端部分读写请求失败，需要等待机器重启或者手动切换前端的IP才能恢复。")]),t._v(" "),e("li",[t._v("主机宕机，宕机前有部分数据未能及时同步到从机，切换IP后还会引入数据不一致的问题，降低了系统的可用性。")]),t._v(" "),e("li",[t._v("Redis 较难支持在线扩容，在集群容量达到上限时在线扩容会变得很复杂。为避免这一问题，运维人员在系统上线时必须确保有足够的空间，这对资源造成了很大的浪费。")])])])}),[],!1,null,null,null);s.default=l.exports}}]);